
           +-------+                           +-----------+
COOL  ==>  | LEXER |                           | GENERADOR |  ==>  MIPS
           +-------+       +-----------+       +-----------+
               ||      =>  | SEMANTICO |  =>        ||
           +--------+      +-----------+      +--------------+
           | PARSER |                         | OPTIMIZACION | 
           +--------+                         +--------------+

A modo de resumen, tenemos  entonces cinco  fases fundamentales: 
 * Análisis  Lexicográﬁco (lexer) : donde se realiza la conversión de una secuencia
   de caracteres a una secuencia de tokens.
    En esta fase se detectan los errores relacionados con la escritura incorrecta 
    de símbolos, por ejemplo, un número decimal con más dígitos de los 
    permitidos, una cadena de texto que no termina en ", un identiﬁcador que 
    usa un caracter inválido (e.j. $).
 * Análisis  Sintáctico (parser) : donde se determina la estructura sintáctica del 
   programa a partir de los tokens y se obtiene una estructura intermedia.
    En esta fase se detectan los errores relacionados con la sintaxis, por ejem- 
    plo, un paréntesis no balanceado, una función que no tiene cuerpo, un 
    if-else con la parte else vacía.
 * Análisis  Semántico : donde se veriﬁcan las condiciones semánticas del progra- 
   ma y se valida el uso correcto de todos los símbolos deﬁnidos.
    En esta fase se determinan los errores relacionados con los símbolos y 
    tipos, por ejemplo, variables no declaradas o usadas antes de su decla- 
    ración o funciones invocadas con un número o un tipo incorrecto de los 
    argumentos.
 * Optimización : donde se eliminan o simpliﬁcan secciones del programa en función 
   de la arquitectura de máquina hacian donde se vaya a compilar.
 * Generación : donde se convierte ﬁnalmente la estructura semántica y optimizada 
   hacia el lenguaje objetivo en la arquitectura donde será ejecutado.
